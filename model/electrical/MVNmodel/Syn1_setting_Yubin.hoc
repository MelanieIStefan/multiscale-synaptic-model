// Add AMPA/NMDA synapses to every dendritic compartment
// Add GABA synapses to every dendritic compartment
// V1 Yubin 19-04-16
// V2 Yubin 26-04-16 divide dendrite into dend_others,dend_3,10,11

NSYN = 60
objref Asyn[NSYN], Nsyn[NSYN], ncA[NSYN], ncN[NSYN], ns


Aweight_others=0
Nweight_others=0
Aweight_d3 =0
Nweight_d3 =0
Aweight_d10 =0
Nweight_d10 =0
Aweight_d11 = 0.00002  //0.00002
Nweight_d11 = 0.00005    //0.00005

// single spike to synapse
somaB ns = new NetStim(0.5)
ns.interval = 10000
ns.number = 1
ns.start = 1000
ns.noise = 0


// Attach synapses to proximal dendrites
for j=0,3 {
  for i=0,2 {
    dendB[j] Asyn[j*3+i] = new Exp2Syn(0.25*(i+1))  // AMPA
    dendB[j] Nsyn[j*3+i] = new NMDAsyn(0.25*(i+1))
  }
}

// Attach synapses to distal dendrites
for j=4,11 {
  for i=0,5 {
    dendB[j] Asyn[(j-4)*6+i+12] = new Exp2Syn(0.125*(i+1))  // AMPA
    dendB[j] Nsyn[(j-4)*6+i+12] = new NMDAsyn(0.125*(i+1))
  }
}

// Set synaptic properties
for i=0,59 {
  // AMPA
//  Asyn[i].tau1 = 0.2	// fast rise
  Asyn[i].tau1 = 1	// fast rise (probably more realistic)
  Asyn[i].tau2 = 7	// decay at -60mV (Anchisi et al)
  Asyn[i].e = 2.3	// Anchisi et al

  if (i<=8) {
  ncA[i] = new NetCon(ns, Asyn[i], -20, 1, Aweight_others)}

  if (9<=i && i<=11) {
  ncA[i] = new NetCon(ns, Asyn[i], -20, 1, Aweight_d3)}

  if (12<=i<=47) {
  ncA[i] = new NetCon(ns, Asyn[i], -20, 1, Aweight_others)}

  if (48<=i && i<=53) {
  ncA[i] = new NetCon(ns, Asyn[i], -20, 1, Aweight_d10)}

  if (54<=i && i<=59) {
  ncA[i] = new NetCon(ns, Asyn[i], -20, 1, Aweight_d11)}

  Nsyn[i].tau1 = 12.5	// slow rise
  Nsyn[i].tau2 = 20	// decay at -60mV (Anchisi et al)
//  Nsyn[i].tau1 = 9	// slow rise (mean-std)
//  Nsyn[i].tau2 = 11	// decay at -60mV (Anchisi et al) (mean-std)
  Nsyn[i].e = -0.5	// Anchisi et al

  if (i<=8) {
  ncN[i] = new NetCon(ns, Nsyn[i], -20, 1, Nweight_others)}

  if (9<=i && i<=11) {
  ncN[i] = new NetCon(ns, Nsyn[i], -20, 1, Nweight_d3)}

  if (12<=i<=47) {
  ncN[i] = new NetCon(ns, Nsyn[i], -20, 1, Nweight_others)}

  if (48<=i && i<=53) {
  ncN[i] = new NetCon(ns, Nsyn[i], -20, 1, Nweight_d10)}

  if (54<=i && i<=59) {
  ncN[i] = new NetCon(ns, Nsyn[i], -20, 1, Nweight_d11)}

  }





proc set_weights() {

  for i=0,8 {
    ncA[i].weight = Aweight_others 
    ncN[i].weight = Nweight_others  
  }


  for i=9,11 {
    ncA[i].weight = Aweight_d3 
    ncN[i].weight = Nweight_d3  
  }
  for i=12,47 {
    ncA[i].weight = Aweight_others  
    ncN[i].weight = Nweight_others  
  }
  for i=48,53 {
    ncA[i].weight = Aweight_d10
    ncN[i].weight = Nweight_d10  
  }
  for i=54,59 {
    ncA[i].weight = Aweight_d11 
    ncN[i].weight = Nweight_d11 
  }


  }  




// Add GABA synapses to every dendritic compartment
// BPG 23-11-07

NSYNI = 60
objref Gsyn[NSYNI], ncG[NSYNI], nsg

Gweight_others = 0.0
Gweight_d3 = 0.005*sin(2*t*3.14/1000)+0.005
Gweight_d10 = 0
Gweight_d11 = 2e-5

// spikes to inhibitory synapses
somaB nsg = new NetStim(0.5)
nsg.interval = 10000
nsg.number = 0
nsg.start = 1500
nsg.noise = 0



//Attach synapses to proximal dendrites
for j=0,3 {
  for i=0,2 {
    dendB[j] Gsyn[j*3+i] = new Exp2Syn(0.25*(i+1))  // GABA
 }
}

// Attach synapses to distal dendrites
for j=4,11 {
  for i=0,5 {
    dendB[j] Gsyn[(j-4)*6+i+12] = new Exp2Syn(0.125*(i+1))  // GABA
	}
}

// Set synaptic properties
for i=0,NSYNI-1 {
  // GABA
  Gsyn[i].tau1 = 1  // fast rise
  Gsyn[i].tau2 = 13 // decay (Gauk & Jaeger)
  Gsyn[i].e = -80
  if (i<=8) {
  ncG[i] = new NetCon(nsg, Gsyn[i], -20, 1, Gweight_others)}

  if (9<=i && i<=11) {
  ncG[i] = new NetCon(nsg, Gsyn[i], -20, 1, Gweight_d3)}

  if (12<=i<=47) {
  ncG[i] = new NetCon(nsg, Gsyn[i], -20, 1, Gweight_others)}

  if (48<=i && i<=53) {
  ncG[i] = new NetCon(nsg, Gsyn[i], -20, 1, Gweight_d10)}

  if (54<=i && i<=59) {
  ncG[i] = new NetCon(nsg, Gsyn[i], -20, 1, Gweight_d11)}

  }


proc set_Gweights() {
  for i=0,8 {
    ncG[i].weight = Gweight_others  // GABA
  }


  for i=9,11 {
    ncG[i].weight = Gweight_d3  // GABA
  }
  for i=12,47 {
    ncG[i].weight = Gweight_others  // GABA
  }
  for i=48,53 {
    ncG[i].weight = Gweight_d10  // GABA
  }
  for i=54,59 {
    ncG[i].weight = Gweight_d11  // GABA
  }
  
}

