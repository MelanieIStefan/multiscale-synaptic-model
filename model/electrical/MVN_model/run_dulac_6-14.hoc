// MVN B cell with AMPA/NMDA synapse in every dendritic compartment
// LVA and Nap reduced to approximate Menzies & Dutia low firing and lack of rebound
// BPG 7-11-07

load_file("nrngui.hoc")
load_file("globals.hoc")
load_file("mvnB.hoc")

// general simulation settings
DT = 0.025
dt = DT
steps_per_ms = 1/DT
tstart = TSTART
tstop = TSTOP
celsius = TEMPERATURE
v_init = V_INIT

access somaB


// reduce ILVA and INaP to stop rebound firing

//forsec proximalB gbar_lva = 0.001607
//forsec somalB gbar_lva = 5e-5	
//forsec proximalB gbar_lva = 5e-5	// as for distal

// LTS LVA
forsec proximalB gbar_lva = 0.001566

// Normal LVA
//forsec proximalB gbar_lva = 0.000651


//forsec somalB gbar_na = 0
//forsec proximalB gbar_na = 0

//forsec somalB gbar_nap = 2.36e-05/3
//forsec proximalB gbar_nap = 3.8e-05/3






// set up AMPA/NMDA/GABA synapses
load_file("Syn1_setting_Yubin.hoc")



//setting A/N Synapses
ns.number=55
ns.start=1000
ns.interval = 10
Aweight_others=2e-5
Nweight_others=5e-5
Aweight_d3=2e-5
Nweight_d3=10e-5
Aweight_d10=2e-5
Nweight_d10=5e-5
Aweight_d11=2e-5
Nweight_d11=5e-5

set_weights()
//setting GABA synapses
nsg.start=1000
nsg.interval = 10
nsg.number=0
Gweight_others=0.005
Gweight_d3=0.005
Gweight_d10=0.005   
Gweight_d11=0.005
set_Gweights()


// Current clamps
objref ccres, cchyp
// hold at rest potential (-65mV)
somaB ccres = new IClamp(0.5)
// hyperpolarising pulse
somaB cchyp = new IClamp(0.5)




xopen("mvnB_Yubin.ses")

//Setting Resting Hyperpolarisation Current
ccres.amp = 0
//Setting Negative Current
cchyp.amp = 0


objref savedata, sdata
objref rect, recv,recca,reclva,delaylist
objref matrix
strdef fname

savedata= new File()
sdata= new File()
rect = new Vector()
recv = new Vector()
recca= new Vector()
reclva= new Vector()

delaylist = new Vector()
matrix = new Matrix()



objref savedata, sdata
objref rect, recv_p,recca_p,recca_d,recv_d,recnmda_p,rechva_p,reclva_p
objref matrix
strdef fname

savedata= new File()
sdata= new File()
rect = new Vector()
recv_p = new Vector()
recv_d = new Vector()
recca_p= new Vector()
recca_d= new Vector()
reclva_p= new Vector()
rechva_p= new Vector()
recnmda_p= new Vector()


matrix = new Matrix()

dt = 0.025
tstop = 20000
t=20000
steps_per_ms = 40
//for k=0,11 {

//ccres.amp = 0
sprint(fname,"../Data/Dulac/I=%.3f_G%.2fE10LTS_testings.txt",ccres.amp,nsg.number)
savedata.wopen(fname)
recv_p.record(&dendB[3].v(0.5))
recv_d.record(&dendB[11].v(0.5))
rect.record(&t)
recca_p.record(&dendB[3].cai(0.5))
recca_d.record(&dendB[11].cai(0.5))
reclva_p.record(&dendB[3].i_lva(0.5)) 
rechva_p.record(&dendB[3].i_hva(0.5)) 
recnmda_p.record(&Nsyn[9].i) 
run()

print(rect.size())
//print("Stimulating %f",fname)


savedata.printf("t\tdendB[3].v(0.5)\tdendB[11].v(0.5)\tdendB[3].cai(0.5)\tdendB[11].cai\tdend[3].lva\tdend[3].hva\tdend[3].nmda\n")
matrix.resize(rect.size(),8)
matrix.setcol(0,rect)
matrix.setcol(1,recv_p)
matrix.setcol(2,recv_d)
matrix.setcol(3,recca_p)
matrix.setcol(4,recca_d)
matrix.setcol(5,reclva_p)
matrix.setcol(6,rechva_p)
matrix.setcol(7,recnmda_p)

matrix.fprint(savedata,"%.7g\t")
savedata.close()
//}



