{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}



{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 5000
xvalue("t","t", 2 )
tstop = 5000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 40.84
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(0,96)
}



{
// panel for spike timing
xpanel("Synapses Setting")
xlabel("Ampar/NMDA Synapses")
xpvalue("Start time", &ns.start, 1)
xpvalue("Spike interval", &ns.interval, 1)
xpvalue("Number", &ns.number, 1)
// Panel for adjusting weights
xpvalue("AMPA Weight_others", &Aweight_others, 1)
xpvalue("NMDA Weight__others", &Nweight_others, 1)
xpvalue("AMPA Weight_d3", &Aweight_d3, 1)
xpvalue("NMDA Weight_d3", &Nweight_d3, 1)
xpvalue("AMPA Weight_d10", &Aweight_d10, 1)
xpvalue("NMDA Weight_d10", &Nweight_d10, 1)
xpvalue("AMPA Weight_d11", &Aweight_d11, 1)
xpvalue("NMDA Weight_d11", &Nweight_d11, 1)
xbutton("Update", "set_weights()")
//GABA
xlabel("GABA Synapses")
xpvalue("Start time", &nsg.start, 1)
xpvalue("Spike interval", &nsg.interval, 1)
xpvalue("Number", &nsg.number, 1)
// Panel for adjusting weights
xpvalue("GABA Weight_others", &Gweight_others, 1)
xpvalue("GABA Weight_d3", &Gweight_d3, 1)
xpvalue("GABA Weight_d10", &Gweight_d10, 1)
xpvalue("GABA Weight_d11", &Gweight_d11, 1)
xbutton("Update", "set_Gweights()")
xpanel()
}


{
save_window_ = new Graph(0)
save_window_.size(0,2000,-80,40)
scene_vector_[2] = save_window_
{save_window_.view(0, -80, 2000, 120, 324, 0, 300.6, 200.8)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
//save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendB[3].v( 0.5 )", 2, 1, 0.8, 0.9, 2)
save_window_.addexpr("somaB.v( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendB[11].v( 0.5 )", 5, 1, 0.8, 0.9, 2)
}

{
xpanel("IClamps at somaB(0.5)", 0)
xlabel("IClamp[0] at somaB(0.5)")
ccres.del = 0
xvalue("del","ccres.del", 1,"", 0, 1 )
ccres.dur = 10000
xvalue("dur","ccres.dur", 1,"", 0, 1 )
ccres.amp = -0.12
xvalue("amp","ccres.amp", 1,"", 0, 1 )
ccres.i = -0.12
xvalue("i","ccres.i", 0,"", 0, 1 )
xlabel("IClamp[1] at somaB(0.5)")
cchyp.del = 200
xvalue("del","cchyp.del", 1,"", 0, 1 )
cchyp.dur = 20
xvalue("dur","cchyp.dur", 1,"", 0, 1 )
cchyp.amp =0 //-0.16
xvalue("amp","cchyp.amp", 1,"", 0, 1 )
cchyp.i = 0
xvalue("i","cchyp.i", 0,"", 0, 1 )
xpanel()
}

{
save_window_ = new Graph(0)
save_window_.size(0,2000,0,0.0019)
scene_vector_[3] = save_window_
{save_window_.view(0, 0, 2000, 0.0019, 324, 336, 303.3, 200.8)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("dendB[2].cai( 0.5 )", 4, 1, 0.8, 0.9, 2)

save_window_.addexpr("dendB[3].cai( 0.5 )", 6, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendB[3].cai( 0.1 )", 7, 1, 0.8, 0.9, 2)
//save_window_.addexpr("cai(.5 )", 2, 1, 0.8, 0.9, 2)
save_window_.addexpr("somaB.cai( 0.5 )", 5, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendB[11].cai( 0.5 )", 3, 1, 0.8, 0.9, 2)

}
{
save_window_ = new Graph(0)
save_window_.size(0,2000,-0.009,2.91038e-10)
scene_vector_[4] = save_window_
{save_window_.view(0, -0.009, 2000, 0.009, 738, 0, 279.9, 200.8)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("dendB[3].i_hva( 0.5 )", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendB[3].i_lva( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendB[11].i_hva( 0.5 )", 5, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendB[11].i_lva( 0.5 )", 2, 1, 0.8, 0.9, 2)
save_window_.addvar("Nsyn[9].i", 2, 1, 0.8, 0.9, 2)
}


{
save_window_ = new Graph(0)
save_window_.size(0,2000,-0.0045,1.45519e-10)
scene_vector_[6] = save_window_
{save_window_.view(0, -0.0045, 2000, 0.0045, 1092, 0, 326.7, 200.8)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[3].")
save_window_.addvar("Asyn[9].i", 1, 1, 0.8, 0.9, 2)
save_window_.addvar("Nsyn[9].i", 2, 1, 0.8, 0.9, 2)
//save_window_.addvar("Asyn[0].i", 3, 1, 0.8, 0.9, 2)
//save_window_.addvar("Nsyn[0].i", 4, 1, 0.8, 0.9, 2)
//save_window_.addvar("Asyn[50].i", 5, 1, 0.8, 0.9, 2)
//save_window_.addvar("Nsyn[50].i", 6, 1, 0.8, 0.9, 2)
save_window_.addvar("Asyn[59].i", 7, 1, 0.8, 0.9, 2)
save_window_.addvar("Nsyn[59].i", 8, 1, 0.8, 0.9, 2)
save_window_.addvar("Gsyn[9].i", 3, 1, 0.8, 0.9, 2)


}
objectvar scene_vector_[1]
{doNotify()}

